<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wbq.spike.dao.StockDao">
    <resultMap id="stockResultMap" type="com.wbq.spike.po.Stock">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="sale" property="sale" jdbcType="INTEGER"/>
        <result column="version" property="version" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="all_column">
    id, name, count, sale, version
    </sql>

    <insert id="insertSelective" parameterType="com.wbq.spike.po.Stock">
        insert into stock
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="count != null">
                count,
            </if>
            <if test="sale != null">
                sale,
            </if>
            <if test="version != null">
                version,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="count != null">
                #{count,jdbcType=INTEGER},
            </if>
            <if test="sale != null">
                #{sale,jdbcType=INTEGER},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="updateById" parameterType="int">
        update stock
        <set>
            count = count-1,
            sale = sale+1
        </set>
        where id=#{id}
    </update>

    <update id="updateByIdAndVersion" parameterType="int">
        update stock
        <set>
            count = count-1,
            sale = sale+1,
            version = version+1
        </set>
        where id=#{id} and version=#{version}
    </update>

    <select id="getById" parameterType="int" resultMap="stockResultMap">
        select
        <include refid="all_column"/>
        from stock
        where id=#{id}
    </select>

</mapper>